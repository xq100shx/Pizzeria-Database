-- Generated by Oracle SQL Developer Data Modeler 23.1.0.087.0806
--   at:        2024-01-26 00:36:57 CET
--   site:      Oracle Database 12cR2
--   type:      Oracle Database 12cR2



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE SEQUENCE seq_dostawca START WITH 1 INCREMENT BY 1 NOCACHE;

CREATE SEQUENCE seq_klient START WITH 1 INCREMENT BY 1 NOCACHE;

CREATE SEQUENCE seq_pizza START WITH 1 INCREMENT BY 1 NOCACHE;

CREATE SEQUENCE seq_przepis START WITH 1 INCREMENT BY 1 NOCACHE;

CREATE SEQUENCE seq_rachunek START WITH 1 INCREMENT BY 1 NOCACHE;

CREATE SEQUENCE seq_skladnik START WITH 1 INCREMENT BY 1 NOCACHE;

CREATE SEQUENCE seq_zamowienie START WITH 1 INCREMENT BY 1 NOCACHE;

CREATE TABLE dostawca (
    dostawca_id       NUMBER(5) NOT NULL,
    dostawca_nazwisko VARCHAR2(30) NOT NULL,
    dostawca_imie     VARCHAR2(15)
);

ALTER TABLE dostawca ADD CONSTRAINT dostawca_pk PRIMARY KEY ( dostawca_id );

CREATE TABLE klient (
    klient_id           NUMBER(5) NOT NULL,
    klient_nazwisko     VARCHAR2(30) NOT NULL,
    klient_imie         VARCHAR2(15),
    klient_nr_telefonu  VARCHAR2(10) NOT NULL,
    klient_adres        VARCHAR2(50) NOT NULL,
    klient_miasto       VARCHAR2(20) NOT NULL,
    klient_kod_adresowy VARCHAR2(6) NOT NULL
);

ALTER TABLE klient ADD CONSTRAINT klient_pk PRIMARY KEY ( klient_id );

CREATE TABLE pizza (
    pizza_id    NUMBER(5) NOT NULL,
    pizza_nazwa VARCHAR2(20) NOT NULL,
    pizza_cena  NUMBER(4, 2) NOT NULL
);

ALTER TABLE pizza ADD CONSTRAINT pizza_pk PRIMARY KEY ( pizza_id );

CREATE TABLE przepis (
    przepis_id              NUMBER(5) NOT NULL,
    pizza_id                NUMBER(5) NOT NULL,
    skladnik_id             NUMBER(5) NOT NULL,
    przepis_ilosc_skladnika NUMBER(4, 1) NOT NULL
);

COMMENT ON COLUMN przepis.przepis_ilosc_skladnika IS
    'ilosc podana w gramach';

ALTER TABLE przepis ADD CONSTRAINT pizza_skladnik_pk PRIMARY KEY ( przepis_id );

CREATE TABLE rachunek (
    rachunek_id      NUMBER(5) NOT NULL,
    klient_id        NUMBER(5) NOT NULL,
    rachunek_data    DATE DEFAULT sysdate NOT NULL,
    rachunek_wartosc NUMBER(5, 2)
);

ALTER TABLE rachunek ADD CONSTRAINT rachunek_pk PRIMARY KEY ( rachunek_id );

CREATE TABLE skladnik (
    skladnik_id    NUMBER(5) NOT NULL,
    skladnik_nazwa VARCHAR2(30) NOT NULL
);

ALTER TABLE skladnik ADD CONSTRAINT skladnik_pk PRIMARY KEY ( skladnik_id );

CREATE TABLE typ (
    typ_rozmiar         VARCHAR2(2) DEFAULT 'S' NOT NULL,
    typ_rozmiar_mnoznik NUMBER(2, 1) NOT NULL
);

ALTER TABLE typ
    ADD CONSTRAINT chk_rozmiar CHECK ( typ_rozmiar IN ( 'L', 'M', 'S', 'XL' ) );

COMMENT ON COLUMN typ.typ_rozmiar IS
    'Mala - S - 32 cm srednicy

Srednia - M - 39 cm srednicy

Duza - L - 46 cm srednicy

Mega - XL -  53 cm srednicy';

ALTER TABLE typ ADD CONSTRAINT typ_pk PRIMARY KEY ( typ_rozmiar );

CREATE TABLE zamowienie (
    zamowienie_id    NUMBER(5) NOT NULL,
    dostawca_id      NUMBER(5) NOT NULL,
    rachunek_id      NUMBER(5) NOT NULL,
    pizza_id         NUMBER(5) NOT NULL,
    typ_rozmiar      VARCHAR2(2) NOT NULL,
    zamowienie_ilosc NUMBER(2) DEFAULT 1
);

ALTER TABLE zamowienie ADD CONSTRAINT zamowienie_pk PRIMARY KEY ( zamowienie_id );

ALTER TABLE zamowienie
    ADD CONSTRAINT dostawca_fk FOREIGN KEY ( dostawca_id )
        REFERENCES dostawca ( dostawca_id )
    NOT DEFERRABLE;

ALTER TABLE rachunek
    ADD CONSTRAINT klient_fk FOREIGN KEY ( klient_id )
        REFERENCES klient ( klient_id )
    NOT DEFERRABLE;

ALTER TABLE przepis
    ADD CONSTRAINT pizza_fk FOREIGN KEY ( pizza_id )
        REFERENCES pizza ( pizza_id )
    NOT DEFERRABLE;

ALTER TABLE zamowienie
    ADD CONSTRAINT pizza_fkv2 FOREIGN KEY ( pizza_id )
        REFERENCES pizza ( pizza_id )
    NOT DEFERRABLE;

ALTER TABLE zamowienie
    ADD CONSTRAINT rachunek_fk FOREIGN KEY ( rachunek_id )
        REFERENCES rachunek ( rachunek_id )
    NOT DEFERRABLE;

ALTER TABLE przepis
    ADD CONSTRAINT skladnik_fk FOREIGN KEY ( skladnik_id )
        REFERENCES skladnik ( skladnik_id )
    NOT DEFERRABLE;

ALTER TABLE zamowienie
    ADD CONSTRAINT typ_fk FOREIGN KEY ( typ_rozmiar )
        REFERENCES typ ( typ_rozmiar )
    NOT DEFERRABLE;

--ranking pizz danego dnia
create or replace view ranking_dzienny as
select pizza_nazwa "NAZWA PIZZY",sum(zamowienie_ilosc) "LICZBA ZAMOWIEN" from rachunek r
join zamowienie z on r.rachunek_ID = z.rachunek_ID
join pizza p on z.pizza_ID = p.pizza_ID
where to_date(rachunek_data) = to_date('24/01/27','YY/MM/DD')
group by pizza_nazwa
order by "LICZBA ZAMOWIEN" desc
;
--przepis na dana pizze
create or replace view przepis_Manhattan as
select skladnik_nazwa SKLADNIK, przepis_ilosc_skladnika "ILOSC (g)" from przepis
join skladnik on przepis.skladnik_ID = skladnik.skladnik_ID
join pizza on przepis.pizza_ID = pizza.pizza_ID
where pizza_nazwa = 'Manhattan'
;
--informacje o zamowieniu
create or replace view dostawa_detale as
select distinct klient_imie||' '||klient_nazwisko as "IMIE I NAZWISKO",klient_nr_telefonu as "NR TELEFONU",
       klient_adres||', '||klient_kod_adresowy||' '||klient_miasto as "ADRES",
       dostawca_imie||' '||dostawca_nazwisko as DOSTAWCA,rachunek_data as DATA,r.rachunek_ID as "NR RACHUNKU" from zamowienie z
join rachunek r on z.rachunek_ID = r.rachunek_ID
join klient k on r.klient_ID = k.klient_ID
join dostawca d on z.dostawca_ID = d.dostawca_ID
order by DATA desc
;
--ranking dostawcow
create or replace view ranking_dostawcow as
select dostawca_imie||' '||dostawca_nazwisko "IMIE I NAZWISKO", count(*) "LICZBA DOSTAW" from (select distinct r.rachunek_ID,d.dostawca_ID from rachunek r
                                join zamowienie z on r.rachunek_ID = z.rachunek_ID
                                join dostawca d on z.dostawca_ID = d.dostawca_ID) s
join dostawca d on s.dostawca_id = d.dostawca_id
group by s.dostawca_ID,dostawca_imie||' '||dostawca_nazwisko
order by "LICZBA DOSTAW" desc
;

--top pizza dnia
create or replace view top_pizza_dzien as
with PizzaRanking as (
    select pz.pizza_nazwa,sum(z.zamowienie_ilosc) as suma, r.rachunek_data, rank() over (partition by trunc(r.rachunek_data) order by sum(z.zamowienie_ilosc) desc) as ranking from pizza pz
    join zamowienie z ON pz.pizza_id = z.pizza_id
    join rachunek r ON z.rachunek_id = r.rachunek_id
    group by r.rachunek_data, pz.pizza_nazwa
)
select pizza_nazwa as "NAZWA PIZZY",suma "LICZBA ZAMOWIEN",rachunek_data "DATA" from PizzaRanking
where ranking = 1
order by rachunek_data, suma desc;
